call stack:
the call stack is used by javascript to keep track of functions calls evaluation (what happens to them). it uses the stack data structure. 

a stack is a pattern for organizing a collection of items. 

a stack obeys the following pattern:
- new items are placed on top of the pile (pushing).
- any item removed has to be from the top of the pile (popping).

stack frames is a term used to describe pushing and popping in javascript's call stack.

there are two ways where javascript uses the above the stack mechanics during runtime:
- a new frame is pushed onto the stack when a functon is called.
- a frame is popped from the top of the stack when a functin is returned.

a stack frame contains data about a specific function call such as local variables in the function, arguments, and which line to return to after the frame is popped.

the program will exit once all the stack frames are done with their instructions and the call stack is empty. an exception of this is when a program is asynchronously listening for an event to occur, such as waiting for the setTimeout to expire. setTimeout adds a timer to the stack frame before starting. 

an event can only be handled once the call stack is empty. events such as timeouts, user clicking a button or hitting a key.
